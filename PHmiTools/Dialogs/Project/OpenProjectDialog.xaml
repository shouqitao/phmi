<Dialogs:ProjectDialogBase
    x:Class="PHmiTools.Dialogs.Project.OpenProjectDialog"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Converters="clr-namespace:PHmiClient.Converters;assembly=PHmiClient"
    xmlns:Loc="clr-namespace:PHmiResources.Loc;assembly=PHmiResources"
    xmlns:Dialogs="clr-namespace:PHmiTools.Dialogs.Project" Title="{x:Static Loc:Res.OpenProject}"
    Icon="pack://application:,,,/PHmiResources;component/Images/fileopen.ico"
    SizeToContent="WidthAndHeight"
    ResizeMode="NoResize"
    WindowStartupLocation="CenterOwner"
    MaxWidth="800" MinWidth="300">
    <Window.Resources>
        <Dialogs:OpenProjectDialogViewModel x:Key="ViewModel" />
    </Window.Resources>
    <Window.DataContext>
        <Binding Source="{StaticResource ViewModel}" />
    </Window.DataContext>
    <Window.InputBindings>
        <KeyBinding Key="Escape" Command="{Binding Path=CancelCommand}" />
        <KeyBinding Key="Enter" Command="{Binding Path=OkCommand}" />
    </Window.InputBindings>
    <Grid Margin="8,4">
        <Grid.Resources>
            <Converters:InvertConverter x:Key="InvertConverter" />
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid IsEnabled="{Binding Path=InProgress, Converter={StaticResource InvertConverter}}">
            <Grid.Resources>
                <Style TargetType="TextBlock">
                    <Setter Property="VerticalAlignment" Value="Center" />
                    <Setter Property="HorizontalAlignment" Value="Right" />
                    <Setter Property="Margin" Value="0,0,4,0" />
                    <Style.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="Gray" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
                <Style TargetType="TextBox">
                    <Setter Property="Margin" Value="0,4" />
                    <Setter Property="Height" Value="22" />
                    <Style.Triggers>
                        <Trigger Property="Validation.HasError" Value="true">
                            <Setter Property="ToolTip"
                                    Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)[0].ErrorContent}" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
                <Style TargetType="PasswordBox">
                    <Setter Property="Margin" Value="0,4" />
                    <Setter Property="Height" Value="22" />
                    <Style.Triggers>
                        <Trigger Property="Validation.HasError" Value="true">
                            <Setter Property="ToolTip"
                                    Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)[0].ErrorContent}" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
                <Style TargetType="CheckBox">
                    <Setter Property="VerticalAlignment" Value="Center" />
                    <Setter Property="Margin" Value="0,4" />
                </Style>
            </Grid.Resources>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <TextBlock Text="{x:Static Loc:Res.Server}" />
            <TextBox Grid.Column="1" Grid.ColumnSpan="2" x:Name="tbServer"
                     Text="{Binding Path=ConnectionParameters.Server, Mode=TwoWay, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" />

            <TextBlock Text="{x:Static Loc:Res.Port}" Grid.Row="1" />
            <TextBox Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="1" x:Name="tbPort"
                     Text="{Binding Path=ConnectionParameters.Port, Mode=TwoWay, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" />

            <TextBlock Grid.Row="2" Text="{x:Static Loc:Res.Username}" />
            <TextBox Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="2" x:Name="tbUserId"
                     Text="{Binding Path=ConnectionParameters.UserId, Mode=TwoWay, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" />

            <TextBlock Grid.Row="3" Text="{x:Static Loc:Res.Password}" />
            <PasswordBox Grid.Row="3" Grid.Column="1" Grid.ColumnSpan="2" x:Name="pbPasswrod"
                         Tag="{Binding Path=ConnectionParameters.Password, Mode=OneWay, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" />

            <TextBlock Grid.Row="4" Text="{x:Static Loc:Res.Database}" />
            <TextBox Grid.Row="4" Grid.Column="1" x:Name="tbDatabase"
                     Text="{Binding Path=ConnectionParameters.Database, Mode=TwoWay, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" />
            <Button Grid.Row="4" Grid.Column="2" Margin="8,4,0,4" MinWidth="22" Content="..."
                    Command="{Binding Path=LoadDatabasesCommand}" />

            <ListBox Grid.Row="5" Grid.Column="1" Grid.ColumnSpan="2" ItemsSource="{Binding Path=Databases}"
                     SelectedItem="{Binding Path=ConnectionParameters.Database, Mode=TwoWay}"
                     MouseDoubleClick="ListBoxMouseDoubleClick">
                <ListBox.Style>
                    <Style TargetType="ListBox">
                        <Setter Property="MaxHeight" Value="200" />
                        <Setter Property="MinHeight" Value="50" />
                        <Setter Property="Margin" Value="0,4" />
                        <Setter Property="SelectionMode" Value="Single" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=Databases.Count}" Value="0">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ListBox.Style>
            </ListBox>

            <TextBlock Grid.Row="6" Text="{x:Static Loc:Res.Remember}" />
            <CheckBox Grid.Row="6" Grid.Column="1" Grid.ColumnSpan="2"
                      IsChecked="{Binding Path=Remember, Mode=TwoWay, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" />
        </Grid>
        <ProgressBar VerticalAlignment="Top" Margin="0,76,0,0" HorizontalAlignment="Center" Height="20"
                     Width="150"
                     Visibility="{Binding Path=InProgress, Converter={StaticResource BooleanToVisibilityConverter}}"
                     Maximum="{Binding Path=ProgressMax}" Value="{Binding Path=Progress, Mode=OneWay}"
                     IsIndeterminate="{Binding Path=ProgressIsIndeterminate}" />
        <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Right">
            <StackPanel.Resources>
                <Style TargetType="Button">
                    <Setter Property="MinWidth" Value="70" />
                </Style>
            </StackPanel.Resources>
            <Button Margin="0,4,4,4" Content="{x:Static Loc:Res.Ok}" Command="{Binding Path=OkCommand}" />
            <Button Margin="4,4,0,4" Content="{x:Static Loc:Res.Cancel}"
                    Command="{Binding Path=CancelCommand}" />
        </StackPanel>
    </Grid>
</Dialogs:ProjectDialogBase>